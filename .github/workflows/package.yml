on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Package Extension

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag_name: ${{ steps.vars.outputs.tag }}
    steps:
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  build_release:
    name: Build release
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: yarn install
      - name: Install vsce in Linux
        if: matrix.os == 'ubuntu-latest'
        run: sudo npm install vsce -g
      - name: Install vsce in macOS
        if: matrix.os == 'macOS-latest'
        run: npm install vsce -g
      - name: Install vsce in Windows
        if: matrix.os == 'windows-latest'
        run: npm install vsce -g
      - name: Package extension
        run: |
          vsce package --no-yarn -o ${{ needs.create_release.outputs.tag_name }}-${{ matrix.os }}.vsix
          ls
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./${{ needs.create_release.outputs.tag_name }}-${{ matrix.os }}.vsix
          asset_name: ${{ needs.create_release.outputs.tag_name }}-${{ matrix.os }}.vsix
          asset_content_type: application/octet-stream